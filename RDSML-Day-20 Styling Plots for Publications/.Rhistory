q()
q()
# install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +Add commentMore actions
geom_point(size=1, shape=18) +
geom_smooth(method = 1m)
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
geom_smooth(method = lm)
# Removing the confident interval
ggplot(dataset, aes(x=wt, y=mpg)) +
# Removing the confident interval
ggplot(dataset, aes(x=wt, y=mpg)) +
geom_point() +
# Removing the confident interval
ggplot(dataset, aes(x=wt, y=mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
geom_point() +
geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x=wt, y=mpg)) +
geom_point() +
geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) +Add commentMore actions
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +Add commentMore actions
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
geom_smooth(method = lm, linetype = "dashed",
color="darkblue")
geom_smooth(method = lm, linetype = "dotted",
color="darkblue")
geom_smooth(method = lm, linetype = "dashed",
color="darkred", fill= "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
geom_smooth(method = lm, linetype = "dashed",
color="darkred", fill= "blue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape=18) +
geom_smooth(method = lm)
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape=18, color = blue) +
geom_smooth(method = lm)
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape=18, color = "blue") +
geom_smooth(method = lm)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl
# Converting the cyl colunm from a numeric to factor variable
dataset$cyl = as.factor(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot((dataset, aes(x= wt, y=mpg, shape= cyl))+
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl))+
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl))+
geom_point(cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl))+
geom_point()
geom_point(size=3, shape=18, color = "blue") +
geom_smooth(method = bm)
geom_point()
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl))+
geom_point()
# Changing the point shapes and colors
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl, color= cyl))+
geom_point()
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl, color= cyl, size=cyl,))+
geom_point()
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl, color= cyl, size=cyl,))+
geom_point()
setwd("D:/R NBICT/R-for-Data-Source-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-20 Styling Plots for Publications")
library(ggplot2)
library(ggthemes)
library("ggthemes")
library(viridis)
# Styling plot
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_plot(size=3)
# Styling plot
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_plot(size=3)
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_plot(size=3)
# Sample data loading
df=mtcars
df$cyl=as.factor(df$cyl)
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_plot(size=3)
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_plot(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)
# Styling plot
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic()
# Styling plot
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14)
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")+
theme(plot.title = element_text(face="bold", size=16))
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")+
theme(plot.title = element_text(face="bold", size=16))
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")+
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.title = element_text(face="bold", size=14),
axis.text = element_text(size=12)
)
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")+
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.title = element_text(face="bold", size=14),
axis.text = element_text(size=12),
legend.position = "right"
)
# Styling plot
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")+
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.title = element_text(face="bold", size=14),
axis.text = element_text(size=12),
legend.position = "right",
legend.title = element_text(face="bold")
)
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")+
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.title = element_text(face="bold", size=14),
axis.text = element_text(size=12),
legend.position = "right",
legend.title = element_text(face="bold"),
legend.text = element_text(size=12)
)
ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")+
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.title = element_text(face="bold", size=14),
axis.text = element_text(size=12),
legend.position = "right",
legend.title = element_text(face="bold"),
legend.text = element_text(size=12)
)
# Save the plot for publication
ggsave("Publication_ggplot.png, p,width=6, height=4, dpi=300")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
p= ggplot(df, aes(x=wt, y=mpg, color=cyl))+
geom_point(size=3)+
scale_color_viridis_d(name="cylinders")+
labs(
title="Fuel efficiency by car weight",
x="weight (1000 lbs)",
y="Miles per Gallon"
)+
theme_classic(base_size = 14, base_family="serif")+
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.title = element_text(face="bold", size=14),
axis.text = element_text(size=12),
legend.position = "right",
legend.title = element_text(face="bold"),
legend.text = element_text(size=12)
)
# Save the plot for publication
ggsave("Publication_ggplot.png, p,width=6, height=4, dpi=300")
ggsave("publication_ggplot.png", p, width = 6, height = 4, dpi = 300)
# Save the plot for publication
ggsave("Publication_ggplot.png", p,width=6, height=4, dpi=300)
