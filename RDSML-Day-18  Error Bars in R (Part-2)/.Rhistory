q()
q()
# install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +Add commentMore actions
geom_point(size=1, shape=18) +
geom_smooth(method = 1m)
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
geom_smooth(method = lm)
# Removing the confident interval
ggplot(dataset, aes(x=wt, y=mpg)) +
# Removing the confident interval
ggplot(dataset, aes(x=wt, y=mpg)) +
geom_point() +
# Removing the confident interval
ggplot(dataset, aes(x=wt, y=mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
geom_point() +
geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x=wt, y=mpg)) +
geom_point() +
geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) +Add commentMore actions
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +Add commentMore actions
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
geom_smooth(method = lm, linetype = "dashed",
color="darkblue")
geom_smooth(method = lm, linetype = "dotted",
color="darkblue")
geom_smooth(method = lm, linetype = "dashed",
color="darkred", fill= "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
geom_smooth(method = lm, linetype = "dashed",
color="darkred", fill= "blue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape=18) +
geom_smooth(method = lm)
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape=18, color = blue) +
geom_smooth(method = lm)
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape=18, color = "blue") +
geom_smooth(method = lm)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl
# Converting the cyl colunm from a numeric to factor variable
dataset$cyl = as.factor(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot((dataset, aes(x= wt, y=mpg, shape= cyl))+
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl))+
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl))+
geom_point(cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl))+
geom_point()
geom_point(size=3, shape=18, color = "blue") +
geom_smooth(method = bm)
geom_point()
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl))+
geom_point()
# Changing the point shapes and colors
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl, color= cyl))+
geom_point()
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl, color= cyl, size=cyl,))+
geom_point()
ggplot(dataset, aes(x= wt, y=mpg, shape= cyl, color= cyl, size=cyl,))+
geom_point()
setwd("D:/R NBICT/R-for-Data-Source-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-18  Error Bars in R (Part-2)")
ToothGrowth = ToothGrowth
data_summary <- function(data, varname, groupnames){
require(dplyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum <- ddply(data, groupnames, .fun=summary_func, varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
d_summary <- data_summary(ToothGrowth, varname="len",
groupnames=c("supp", "dose"))
library(plyr)
# Importing the dataset
tooth_data = ToothGrowth
# Creating a function for summarizing the data
# based on the grouping variables
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))Add commentMore actions
View(dataset)
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
#data_sum = rename(data_sum, c("mean" = varname))Add commentMore actions
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
return(data_sum)
View(data_summary)
View(data_summary)
View(ToothGrowth)
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))Add commentMore actions
# Importing the dataset
tooth_data = ToothGrowth
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))Add commentMore actions
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))Add commentMore actions
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
data_sum = rename(data_sum, c("mean" = varname))Add commentMore actions
data_sum = rename(data_sum, c("mean" = varname))
data_sum = rename(data_sum, c("mean" = varname))
# Importing the datasetAdd commentMore actions
tooth_data = ToothGrowth
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
library(ggplot2)
ggplot(d_summary, aes(x=dose, y=len))
geom_bar(stat="identity")
ggplot(d_summary, aes(x=dose, y=len))
geom_bar(stat="identity")
ggplot(d_summary, aes(x=dose, y=len, fill= supp))+
geom_bar(stat="identity", position=position_dodge())
ggplot(d_summary, aes(x=dose, y=len, fill= supp))+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=len-sd , ymax=len+sd))
ggplot(d_summary, aes(x=dose, y=len, fill= supp))+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=len-sd , ymax=len+sd), width=0.2)
ggplot(d_summary, aes(x=dose, y=len, fill= supp))+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=len-sd , ymax=len+sd), width=0.2, position=position_dodge)
ggplot(d_summary, aes(x=dose, y=len, fill= supp))+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=len-sd , ymax=len+sd), width=0.2, position=position_dodge(.9))
ggplot(d_summary, aes(x=dose, y=len, fill= supp))+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=len-sd , ymax=len+sd), width=0.2, position=position_dodge(.7))
ggplot(d_summary, aes(x=dose, y=len, fill= supp))+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=len-sd , ymax=len+sd), width=0.2, position=position_dodge(.5))
